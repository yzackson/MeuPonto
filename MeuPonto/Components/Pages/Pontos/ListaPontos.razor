@page "/pontos"
@using MeuPonto.Data;
@using MeuPonto.Models
@inject PontoDatabase _pontoDatabase
@inject NavigationManager navigationManager

<h1>Pontos</h1>

<p>This component demonstrates showing data.</p>

@if (pontos == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button class="btn btn-primary"  @onclick="AddPonto" >Adicionar</button>
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Data</th>
                <th>Tipo</th>
                <th>Justificativa</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ponto in pontos)
            {
                <tr>
                    <td>@ponto.ID</td>
                    <td>@ponto.Data.ToShortDateString()</td>
                    <td>@ponto.Tipo</td>
                    <td>@ponto.Justificativa</td>
                    <td>
                        <button class="btn btn-info" @onclick=@(() => UpdatePonto(ponto))>Editar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<Ponto> pontos;

    protected override async Task OnInitializedAsync()
    {
        pontos = await _pontoDatabase.GetItemsAsync();
    }

    public void AddPonto()
    {
        navigationManager.NavigateTo("addupdateponto");
    }

    public void UpdatePonto(Ponto ponto)
    {
        navigationManager.NavigateTo($"addupdateponto/{ponto.ID}");
    }
}
